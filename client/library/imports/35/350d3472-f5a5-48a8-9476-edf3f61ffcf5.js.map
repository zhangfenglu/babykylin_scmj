{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,gBAAQ,EAAC,EAAE,CAAC,KAAK;AACjB,iBAAS,EAAC,EAAE;AACZ,iBAAS,EAAC,GAAG;AACb,eAAO,EAAC,IAAI;AACZ,kBAAU,EAAC,KAAK;KACnB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAC;AACnC,gBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5C,eAAG,CAAC,SAAS,GAAG,IAAI,CAAC;AACrB,eAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;SACvB;AACD,YAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;AACtC,YAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;;AAED,mBAAe,EAAC,2BAAU;AACtB,YAAI,CAAC,SAAS,GAAG,YAAY,CAAA;AAC7B,YAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,YAAI,IAAI,GAAG,IAAI,CAAC;;;AAGhB,UAAE,CAAC,MAAM,CAAC,UAAU,GAAG,UAAW,cAAc,EAAE,UAAU,EAAG,IAAI,EAAE;;AAEjE,gBAAG,IAAI,CAAC,UAAU,EAAC;AACf,oBAAI,CAAC,SAAS,GAAG,cAAc,GAAC,UAAU,CAAC;aAC9C;SACJ,CAAC;;AAEF,UAAE,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;AACpD,gBAAI,CAAC,cAAc,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;;AAED,kBAAc,EAAC,0BAAU;AACpB,YAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,YAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;AAExB,UAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC/B,UAAE,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;;KAEhC;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;AAC3B,mBAAO;SACV;AACD,YAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAC5C,YAAG,IAAI,CAAC,UAAU,EAAC;AACf,gBAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SAClE,MACG;AACA,gBAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,iBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAG,CAAC,EAAC;AACvB,oBAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC;aAC/B;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tipLabel:cc.Label,\r\n        _stateStr:'',\r\n        _progress:0.0,\r\n        _splash:null,\r\n        _isLoading:false,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if(!cc.sys.isNative && cc.sys.isMobile){\r\n            var cvs = this.node.getComponent(cc.Canvas);\r\n            cvs.fitHeight = true;\r\n            cvs.fitWidth = true;\r\n        }\r\n        this.tipLabel.string = this._stateStr;\r\n        this.startPreloading();\r\n    },\r\n    \r\n    startPreloading:function(){\r\n        this._stateStr = \"正在加载资源，请稍候\"\r\n        this._isLoading = true;\r\n        var self = this;\r\n\r\n        //loadResAll 执行之后才会 执行onProgress\r\n        cc.loader.onProgress = function ( completedCount, totalCount,  item ){\r\n            //console.log(\"completedCount:\" + completedCount + \",totalCount:\" + totalCount );\r\n            if(self._isLoading){\r\n                self._progress = completedCount/totalCount;\r\n            }\r\n        };\r\n        \r\n        cc.loader.loadResAll(\"textures\", function (err, assets) {\r\n            self.onLoadComplete();\r\n        });\r\n    },\r\n    \r\n    onLoadComplete:function(){\r\n         this._isLoading = false;\r\n         this._stateStr = \"准备登陆\";\r\n        //this._stateStr = \"\";\r\n         cc.director.loadScene(\"login\");\r\n         cc.loader.onComplete = null;\r\n        //this.tipLabel.string = \"登陆中请稍等\";\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this._stateStr.length === 0){\r\n            return;\r\n        }\r\n        this.tipLabel.string = this._stateStr + ' ';\r\n        if(this._isLoading){\r\n            this.tipLabel.string += Math.floor(this._progress * 100) + \"%\";   \r\n        }\r\n        else{\r\n            var t = Math.floor(Date.now() / 1000) % 4;\r\n            for(var i = 0; i < t; ++ i){\r\n                this.tipLabel.string += '.';\r\n            }            \r\n        }\r\n    }\r\n});"
  ]
}