{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,cAAM,EAAC,EAAE,CAAC,IAAI;AACd,cAAM,EAAC,EAAE,CAAC,WAAW;AACrB,qBAAa,EAAC,EAAE,CAAC,WAAW;AAC5B,eAAO,EAAC,KAAK;AACb,eAAO,EAAC,CAAC,CAAC;KACb;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,EAAE,CAAC,EAAE,IAAI,IAAI,EAAC;AACb,mBAAO;SACV;AACD,YAAG,EAAE,CAAC,EAAE,CAAC,aAAa,IAAI,IAAI,EAAC;AAC3B,gBAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,cAAE,CAAC,EAAE,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AAC1C,cAAE,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC9B;AACD,eAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,AAAC,CAAC,CAAC;AAC7C,UAAE,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAE9B,YAAI,CAAC,OAAO,EAAE,CAAC;KAClB;;AAED,WAAO,EAAC,mBAAU;AACd,YAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACvD,YAAG,IAAI,CAAC,OAAO,EAAC;AACZ,wBAAY,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;SACjD,MACG;AACA,wBAAY,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;SAC1C;KACJ;;AAED,SAAK,EAAC,eAAS,KAAK,EAAC;AACjB,YAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,YAAI,CAAC,OAAO,EAAE,CAAC;KAClB;;AAED,aAAS,EAAC,qBAAU;AAChB,UAAE,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACnC;;;;;;;AAOD,aAAS,EAAC,qBAAU;AAChB,YAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,aAAa,EAAC;AAC5B,cAAE,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACjC;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        target:cc.Node,\r\n        sprite:cc.SpriteFrame,\r\n        checkedSprite:cc.SpriteFrame,\r\n        checked:false,\r\n        groupId:-1,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if(cc.vv == null){\r\n            return;\r\n        }\r\n        if(cc.vv.radiogroupmgr == null){\r\n            var RadioGroupMgr = require(\"RadioGroupMgr\");\r\n            cc.vv.radiogroupmgr = new RadioGroupMgr();\r\n            cc.vv.radiogroupmgr.init();\r\n        }\r\n        console.log(typeof(cc.vv.radiogroupmgr.add));\r\n        cc.vv.radiogroupmgr.add(this);\r\n\r\n        this.refresh();\r\n    },\r\n    \r\n    refresh:function(){\r\n        var targetSprite = this.target.getComponent(cc.Sprite);\r\n        if(this.checked){\r\n            targetSprite.spriteFrame = this.checkedSprite;\r\n        }\r\n        else{\r\n            targetSprite.spriteFrame = this.sprite;\r\n        }\r\n    },\r\n    \r\n    check:function(value){\r\n        this.checked = value;\r\n        this.refresh();\r\n    },\r\n    \r\n    onClicked:function(){\r\n        cc.vv.radiogroupmgr.check(this);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    onDestroy:function(){\r\n        if(cc.vv && cc.vv.radiogroupmgr){\r\n            cc.vv.radiogroupmgr.del(this);            \r\n        }\r\n    }\r\n});\r\n"
  ]
}