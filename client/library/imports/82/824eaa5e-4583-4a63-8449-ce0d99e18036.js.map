{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,eAAO,EAAC,IAAI;KACf;;;AAGD,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;;AAED,OAAG,EAAC,aAAS,WAAW,EAAC;AACrB,YAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC,YAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,YAAG,OAAO,IAAI,IAAI,EAAC;AACf,mBAAO,GAAG,EAAE,CAAC;AACb,gBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;SACnC;AACD,eAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC7B;;AAED,OAAG,EAAC,aAAS,WAAW,EAAC;AACrB,YAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC,YAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,YAAG,OAAO,IAAI,IAAI,EAAC;AACf,mBAAO;SACV;AACD,YAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACvC,YAAG,GAAG,IAAI,CAAC,CAAC,EAAC;AACT,mBAAO,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;SACzB;AACD,YAAG,OAAO,CAAC,MAAM,IAAI,CAAC,EAAC;AACnB,mBAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;SAC/B;KACJ;;AAED,SAAK,EAAC,eAAS,WAAW,EAAC;AACvB,YAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC,YAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,YAAG,OAAO,IAAI,IAAI,EAAC;AACf,mBAAO;SACV;AACD,aAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AACnC,gBAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,gBAAG,GAAG,IAAI,WAAW,EAAC;AAClB,mBAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACnB,MAAI;AACD,mBAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACpB;SACJ;KACJ;;;;;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _groups:null\r\n    },\r\n\r\n    // use this for initialization\r\n    init: function () {\r\n        this._groups = {};\r\n    },\r\n    \r\n    add:function(radioButton){\r\n        var groupId = radioButton.groupId; \r\n        var buttons = this._groups[groupId];\r\n        if(buttons == null){\r\n            buttons = [];\r\n            this._groups[groupId] = buttons; \r\n        }\r\n        buttons.push(radioButton);\r\n    },\r\n    \r\n    del:function(radioButton){\r\n        var groupId = radioButton.groupId;\r\n        var buttons = this._groups[groupId];\r\n        if(buttons == null){\r\n            return; \r\n        }\r\n        var idx = buttons.indexOf(radioButton);\r\n        if(idx != -1){\r\n            buttons.splice(idx,1);            \r\n        }\r\n        if(buttons.length == 0){\r\n            delete this._groups[groupId]   \r\n        }\r\n    },\r\n    \r\n    check:function(radioButton){\r\n        var groupId = radioButton.groupId;\r\n        var buttons = this._groups[groupId];\r\n        if(buttons == null){\r\n            return; \r\n        }\r\n        for(var i = 0; i < buttons.length; ++i){\r\n            var btn = buttons[i];\r\n            if(btn == radioButton){\r\n                btn.check(true);\r\n            }else{\r\n                btn.check(false);\r\n            }\r\n        }        \r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}