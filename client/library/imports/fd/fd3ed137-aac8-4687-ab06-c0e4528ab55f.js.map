{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,eAAO,EAAC,IAAI;KACf;;;AAGD,SAAK,EAAE,iBAAY;AACf,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;AAExC,YAAI,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACjC,YAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC;AACnC,YAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC;KACzC;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACjD,YAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,EAAC;AACzB,iBAAK,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;AAC/D,gBAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,EAAC;AACvB,qBAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;aAC1B,MACI,IAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,EAAC;AAC5B,qBAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;aAC7B,MACG;AACA,qBAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aAC5B;SACJ,MACG;AACA,iBAAK,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5C,iBAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;SAC1B;;AAED,YAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACjD,aAAK,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;KACtD;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _status:null,\r\n    },\r\n\r\n    // use this for initialization\r\n    start: function () {\r\n        this._status = cc.find('Canvas/status');\r\n\r\n        this.red = new cc.Color(205,0,0);\r\n        this.green = new cc.Color(0,205,0);\r\n        this.yellow = new cc.Color(255,200,0);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        var delay = this._status.getChildByName('delay');\r\n        if(cc.vv.net.delayMS != null){\r\n            delay.getComponent(cc.Label).string = cc.vv.net.delayMS + 'ms';\r\n            if(cc.vv.net.delayMS > 800){\r\n                delay.color = this.red;\r\n            }\r\n            else if(cc.vv.net.delayMS > 300){\r\n                delay.color = this.yellow;\r\n            }\r\n            else{\r\n                delay.color = this.green;\r\n            }\r\n        }\r\n        else{\r\n            delay.getComponent(cc.Label).string = 'N/A';\r\n            delay.color = this.red;\r\n        }\r\n        \r\n        var power = this._status.getChildByName('power');\r\n        power.scaleX = cc.vv.anysdkMgr.getBatteryPercent();\r\n    },\r\n});\r\n"
  ]
}