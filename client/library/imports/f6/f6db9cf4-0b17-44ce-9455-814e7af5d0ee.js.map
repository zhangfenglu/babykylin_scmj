{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _lastTouchTime:null,\r\n        _voice:null,\r\n        _volume:null,\r\n        _voice_failed:null,\r\n        _lastCheckTime:-1,\r\n        _timeBar:null,\r\n        MAX_TIME:15000,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this._voice = cc.find(\"Canvas/voice\");\r\n        this._voice.active = false;\r\n        \r\n        this._voice_failed = cc.find(\"Canvas/voice/voice_failed\");\r\n        this._voice_failed.active = false;\r\n        \r\n        this._timeBar = cc.find(\"Canvas/voice/time\");\r\n        this._timeBar.scaleX = 0.0;\r\n        \r\n        this._volume = cc.find(\"Canvas/voice/volume\");\r\n        for(var i = 1; i < this._volume.children.length; ++i){\r\n            this._volume.children[i].active = false;\r\n        }\r\n        \r\n        var btnVoice = cc.find(\"Canvas/voice/voice_failed/btn_ok\");\r\n        if(btnVoice){\r\n            cc.vv.utils.addClickEvent(btnVoice,this.node,\"Voice\",\"onBtnOKClicked\");\r\n        }\r\n        \r\n        var self = this;\r\n        var btnVoice = cc.find(\"Canvas/btn_voice\");\r\n        if(btnVoice){\r\n            btnVoice.on(cc.Node.EventType.TOUCH_START,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_START\");\r\n                cc.vv.voiceMgr.prepare(\"record.amr\");\r\n                self._lastTouchTime = Date.now();\r\n                self._voice.active = true;\r\n                self._voice_failed.active = false;\r\n            });\r\n\r\n            btnVoice.on(cc.Node.EventType.TOUCH_MOVE,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_MOVE\");\r\n            });\r\n                        \r\n            btnVoice.on(cc.Node.EventType.TOUCH_END,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_END\");\r\n                if(Date.now() - self._lastTouchTime < 1000){\r\n                    self._voice_failed.active = true;\r\n                    cc.vv.voiceMgr.cancel();\r\n                }\r\n                else{\r\n                    self.onVoiceOK();\r\n                }\r\n                self._lastTouchTime = null;\r\n            });\r\n            \r\n            btnVoice.on(cc.Node.EventType.TOUCH_CANCEL,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_CANCEL\");\r\n                cc.vv.voiceMgr.cancel();\r\n                self._lastTouchTime = null;\r\n                self._voice.active = false;\r\n            });\r\n        }\r\n    },\r\n    \r\n    onVoiceOK:function(){\r\n        if(this._lastTouchTime != null){\r\n            cc.vv.voiceMgr.release();\r\n            var time = Date.now() - this._lastTouchTime;\r\n            var msg = cc.vv.voiceMgr.getVoiceData(\"record.amr\");\r\n            cc.vv.net.send(\"voice_msg\",{msg:msg,time:time});\r\n        }\r\n        this._voice.active = false;\r\n    },\r\n    \r\n    onBtnOKClicked:function(){\r\n        this._voice.active = false;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this._voice.active == true && this._voice_failed.active == false){\r\n            if(Date.now() - this._lastCheckTime > 300){\r\n                for(var i = 0; i < this._volume.children.length; ++i){\r\n                    this._volume.children[i].active = false;\r\n                }\r\n                var v = cc.vv.voiceMgr.getVoiceLevel(7);\r\n                if(v >= 1 && v <= 7){\r\n                    this._volume.children[v-1].active = true;   \r\n                }\r\n                this._lastCheckTime = Date.now();\r\n            }\r\n        }\r\n        \r\n        if(this._lastTouchTime){\r\n            var time = Date.now() - this._lastTouchTime;\r\n            if(time >= this.MAX_TIME){\r\n                this.onVoiceOK();\r\n                this._lastTouchTime = null;\r\n            }\r\n            else{\r\n                var percent = time / this.MAX_TIME;\r\n                this._timeBar.scaleX = 1 - percent;\r\n            }\r\n        }\r\n    },\r\n});\r\n"
  ]
}