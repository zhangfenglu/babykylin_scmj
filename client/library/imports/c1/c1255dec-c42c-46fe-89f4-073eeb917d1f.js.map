{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,cAAM,EAAC,IAAI;AACX,cAAM,EAAC,IAAI;AACX,kBAAU,EAAC,IAAI;AACf,cAAM,EAAC,IAAI;AACX,gBAAQ,EAAC,IAAI;AACb,aAAK,EAAC,IAAI;KACb;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,EAAE,CAAC,EAAE,IAAI,IAAI,EAAC;AACb,mBAAO;SACV;AACD,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACtC,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACnE,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;AAEvE,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC7C,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAErD,UAAE,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,EAAC,OAAO,EAAC,cAAc,CAAC,CAAC;AACxE,UAAE,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,IAAI,EAAC,OAAO,EAAC,cAAc,CAAC,CAAC;;AAE5E,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,UAAE,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;KACtB;;AAED,gBAAY,EAAC,sBAAS,KAAK,EAAC;AACxB,YAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAC;AAC7B,gBAAG,IAAI,CAAC,KAAK,EAAC;AACV,oBAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ;AACD,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACrB;;AAED,QAAI,EAAC,cAAS,KAAK,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC;AACxC,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAC1B,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,YAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,YAAG,UAAU,EAAC;AACV,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;AAC9B,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACrB,gBAAI,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC;SAC3B,MACG;AACA,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;AAC/B,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;SACrB;KACJ;;AAED,aAAS,EAAC,qBAAU;AAChB,YAAG,EAAE,CAAC,EAAE,EAAC;AACL,cAAE,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;SACtB;KACJ;;;;;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _alert:null,\r\n        _btnOK:null,\r\n        _btnCancel:null,\r\n        _title:null,\r\n        _content:null,\r\n        _onok:null,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if(cc.vv == null){\r\n            return;\r\n        }\r\n        this._alert = cc.find(\"Canvas/alert\");\r\n        this._title = cc.find(\"Canvas/alert/title\").getComponent(cc.Label);\r\n        this._content = cc.find(\"Canvas/alert/content\").getComponent(cc.Label);\r\n        \r\n        this._btnOK = cc.find(\"Canvas/alert/btn_ok\");\r\n        this._btnCancel = cc.find(\"Canvas/alert/btn_cancel\");\r\n        \r\n        cc.vv.utils.addClickEvent(this._btnOK,this.node,\"Alert\",\"onBtnClicked\");\r\n        cc.vv.utils.addClickEvent(this._btnCancel,this.node,\"Alert\",\"onBtnClicked\");\r\n        \r\n        this._alert.active = false;\r\n        cc.vv.alert = this;\r\n    },\r\n    \r\n    onBtnClicked:function(event){\r\n        if(event.target.name == \"btn_ok\"){\r\n            if(this._onok){\r\n                this._onok();\r\n            }\r\n        }\r\n        this._alert.active = false;\r\n        this._onok = null;\r\n    },\r\n    \r\n    show:function(title,content,onok,needcancel){\r\n        this._alert.active = true;\r\n        this._onok = onok;\r\n        this._title.string = title;\r\n        this._content.string = content;\r\n        if(needcancel){\r\n            this._btnCancel.active = true;\r\n            this._btnOK.x = -150;\r\n            this._btnCancel.x = 150;\r\n        }\r\n        else{\r\n            this._btnCancel.active = false;\r\n            this._btnOK.x = 0;\r\n        }\r\n    },\r\n    \r\n    onDestory:function(){\r\n        if(cc.vv){\r\n            cc.vv.alert = null;    \r\n        }\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}