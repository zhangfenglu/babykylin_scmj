{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "function loadImage(url,code,callback){\r\n    /*\r\n    if(cc.vv.images == null){\r\n        cc.vv.images = {};\r\n    }\r\n    var imageInfo = cc.vv.images[url];\r\n    if(imageInfo == null){\r\n        imageInfo = {\r\n            image:null,\r\n            queue:[],\r\n        };\r\n        cc.vv.images[url] = imageInfo;\r\n    }\r\n    \r\n    cc.loader.load(url,function (err,tex) {\r\n        imageInfo.image = tex;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        for(var i = 0; i < imageInfo.queue.length; ++i){\r\n            var itm = imageInfo.queue[i];\r\n            itm.callback(itm.code,spriteFrame);\r\n        }\r\n        itm.queue = [];\r\n    });\r\n    if(imageInfo.image != null){\r\n        var tex = imageInfo.image;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code,spriteFrame);\r\n    }\r\n    else{\r\n        imageInfo.queue.push({code:code,callback:callback});\r\n    }*/\r\n    cc.loader.load(url,function (err,tex) {\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code,spriteFrame);\r\n    });\r\n};\r\n\r\nfunction getBaseInfo(userid,callback){\r\n    if(cc.vv.baseInfoMap == null){\r\n        cc.vv.baseInfoMap = {};\r\n    }\r\n    \r\n    if(cc.vv.baseInfoMap[userid] != null){\r\n        callback(userid,cc.vv.baseInfoMap[userid]);\r\n    }\r\n    else{\r\n        cc.vv.http.sendRequest('/base_info',{userid:userid},function(ret){\r\n            var url = null;\r\n            if(ret.headimgurl){\r\n               url = ret.headimgurl + \".jpg\";\r\n            }\r\n            var info = {\r\n                name:ret.name,\r\n                sex:ret.sex,\r\n                url:url,\r\n            }\r\n            cc.vv.baseInfoMap[userid] = info;\r\n            callback(userid,info);\r\n            \r\n        },cc.vv.http.master_url);   \r\n    }  \r\n};\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.setupSpriteFrame();\r\n    },\r\n    \r\n    setUserID:function(userid){\r\n        if(cc.sys.isNative == false){\r\n            return;\r\n        }\r\n        if(!userid){\r\n            return;\r\n        }\r\n        if(cc.vv.images == null){\r\n            cc.vv.images = {};\r\n        }\r\n        \r\n        var self = this;\r\n        getBaseInfo(userid,function(code,info){\r\n           if(info && info.url){\r\n                loadImage(info.url,userid,function (err,spriteFrame) {\r\n                    self._spriteFrame = spriteFrame;\r\n                    self.setupSpriteFrame();\r\n                });   \r\n            } \r\n        });\r\n    },\r\n    \r\n    setupSpriteFrame:function(){\r\n        if(this._spriteFrame){\r\n            var spr = this.getComponent(cc.Sprite);\r\n            if(spr){\r\n                spr.spriteFrame = this._spriteFrame;    \r\n            }\r\n        }\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}